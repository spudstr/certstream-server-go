project_name: certstream-server-go
release:
  github:
    owner: spudstr
    name: sslmanager
  name_template: '{{.Tag}}'
builds:
  - id: certstream-server-go
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - "386"
      - amd64
      - arm64
    goarm:
      - "6"
    gomips:
      - hardfloat
    goamd64:
      - v1
    targets:
      - linux_386
      - linux_amd64_v1
      - linux_arm64
      - darwin_amd64_v1
      - darwin_arm64
      - windows_amd64_v1
    ignore:
      - goos: darwin
        goarch: "386"
      - goos: darwin
        goarch: arm
      - goos: windows
        goarch: arm
      - goos: windows
        goarch: arm64
      - goos: windows
        goarch: "386"
    dir: .
    main: ./cmd/certstream-server-go/
    binary: certstream-server-go
    builder: go
    gobinary: go
    command: build
    ldflags:
      - -s -w -X github.com/spudstr/certstream-server-go/internal/config.Version={{.Version}}
    env:
      - CGO_ENABLED=0
archives:
  - id: default
    name_template: '{{- .ProjectName }}_ {{- .Version}}_ {{- if eq .Os "darwin" }}macOS{{- else }}{{ .Os }}{{ end }}_ {{- if eq .Arch "386" }}i386{{- else }}{{ .Arch }}{{ end }}'
    format: binary
    files:
      - src: license*
      - src: LICENSE*
      - src: readme*
      - src: README*
      - src: changelog*
      - src: CHANGELOG*
snapshot:
  name_template: '{{ .Version }}-SNAPSHOT-{{ .ShortCommit }}'
checksum:
  name_template: '{{.ProjectName}}_{{.Version}}_checksums.txt'
  algorithm: sha256
dockers:
  - goos: linux
    goarch: amd64
    goarm: "6"
    goamd64: v1
    dockerfile: Dockerfile
    image_templates:
      - spudstr/{{.ProjectName}}:{{.Tag}}-amd64
      - '{{ if not .Prerelease }}spudstr/{{.ProjectName}}:{{.Tag}}{{ end }}'
      - ghcr.io/spudstr/{{.ProjectName}}:{{.Tag}}-amd64
      - '{{ if not .Prerelease }}ghcr.io/spudstr/{{.ProjectName}}:latest-amd64{{ end }}'
    extra_files:
      - config.sample.yaml
    build_flag_templates:
      - --pull
      - --label=org.opencontainers.image.title={{.ProjectName}}
      - --label=org.opencontainers.image.description=Certstream server written in Go
      - --label=org.opencontainers.image.created={{.Date}}
      - --label=org.opencontainers.image.source=https://github.com/spudstr/certstream-server-go
      - --label=org.opencontainers.image.revision={{.FullCommit}}
      - --label=org.opencontainers.image.version={{.Version}}
      - --platform=linux/amd64
    use: buildx
  - goos: linux
    goarch: arm64
    goarm: "6"
    goamd64: v1
    dockerfile: Dockerfile
    image_templates:
      - spudstr/{{.ProjectName}}:{{.Tag}}-arm64
      - '{{ if not .Prerelease }}spudstr/{{.ProjectName}}:latest-arm64{{ end }}'
      - ghcr.io/spudstr/{{.ProjectName}}:{{.Tag}}-arm64
      - '{{ if not .Prerelease }}ghcr.io/spudstr/{{.ProjectName}}:latest-arm64{{ end }}'
    extra_files:
      - config.sample.yaml
    build_flag_templates:
      - --pull
      - --label=org.opencontainers.image.title={{.ProjectName}}
      - --label=org.opencontainers.image.description=Certstream server written in Go
      - --label=org.opencontainers.image.created={{.Date}}
      - --label=org.opencontainers.image.source=https://github.com/spudstr/certstream-server-go
      - --label=org.opencontainers.image.revision={{.FullCommit}}
      - --label=org.opencontainers.image.version={{.Version}}
      - --platform=linux/arm64
    use: buildx
docker_manifests:
  - name_template: spudstr/{{.ProjectName}}:{{.Tag}}
    image_templates:
      - spudstr/{{.ProjectName}}:{{.Tag}}-amd64
      - spudstr/{{.ProjectName}}:{{.Tag}}-arm64
    use: docker
  - name_template: ghcr.io/spudstr/{{.ProjectName}}:{{.Tag}}
    image_templates:
      - ghcr.io/spudstr/{{.ProjectName}}:{{.Tag}}-amd64
      - ghcr.io/spudstr/{{.ProjectName}}:{{.Tag}}-arm64
    use: docker
  - name_template: '{{ if not .Prerelease }}spudstr/{{.ProjectName}}:latest{{ end }}'
    image_templates:
      - spudstr/{{.ProjectName}}:{{.Tag}}-amd64
      - spudstr/{{.ProjectName}}:{{.Tag}}-arm64
    use: docker
  - name_template: '{{ if not .Prerelease }}ghcr.io/spudstr/{{.ProjectName}}:latest{{ end }}'
    image_templates:
      - ghcr.io/spudstr/{{.ProjectName}}:{{.Tag}}-amd64
      - ghcr.io/spudstr/{{.ProjectName}}:{{.Tag}}-arm64
    use: docker
changelog:
  skip: "true"
dist: dist
env_files:
  github_token: ~/.config/goreleaser/github_token
  gitlab_token: ~/.config/goreleaser/gitlab_token
  gitea_token: ~/.config/goreleaser/gitea_token
before:
  hooks:
    - go mod download
source:
  name_template: '{{ .ProjectName }}-{{ .Version }}'
  format: tar.gz
gomod:
  gobinary: go
announce:
  twitter:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
  mastodon:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    server: ""
  reddit:
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    url_template: '{{ .ReleaseURL }}'
  slack:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    username: GoReleaser
  discord:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    author: GoReleaser
    color: "3888754"
    icon_url: https://goreleaser.com/static/avatar.png
  teams:
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    color: '#2D313E'
    icon_url: https://goreleaser.com/static/avatar.png
  smtp:
    subject_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    body_template: 'You can view details from: {{ .ReleaseURL }}'
  mattermost:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    username: GoReleaser
  linkedin:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
  telegram:
    message_template: '{{ .ProjectName }} {{ mdv2escape .Tag }} is out! Check it out at {{ mdv2escape .ReleaseURL }}'
    parse_mode: MarkdownV2
  webhook:
    message_template: '{ "message": "{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}"}'
    content_type: application/json; charset=utf-8
  opencollective:
    title_template: '{{ .Tag }}'
    message_template: '{{ .ProjectName }} {{ .Tag }} is out!<br/>Check it out at <a href="{{ .ReleaseURL }}">{{ .ReleaseURL }}</a>'
git:
  tag_sort: -version:refname
github_urls:
  download: https://github.com
gitlab_urls:
  download: https://gitlab.com
